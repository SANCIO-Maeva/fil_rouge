// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id_user       Int         @id @default(autoincrement())
  name          String
  firstname     String
  mail          String      @unique
  password      String
  role          String
  address       String?   
  latitude      Float?
  longitude     Float?
  city          String?
  country       String?
  skills        UserSkills[]
  announcements Announcements[]
  messagesSent  Messages[] @relation("SentMessages")
  messagesReceived Messages[] @relation("ReceivedMessages")
}

model Skills {
  id_skill    Int          @id @default(autoincrement())
  name        String       @unique
  description String
  users       UserSkills[]
}

model UserSkills {
  userId  Int
  skillId Int
  user    Users @relation(fields: [userId], references: [id_user])
  skill   Skills @relation(fields: [skillId], references: [id_skill])
  
  @@id([userId, skillId])
}

model Announcements {
  id_announcement Int        @id @default(autoincrement())
  title           String
  description     String     @db.Text
  userId          Int       
  user            Users      @relation(fields: [userId], references: [id_user])
  messages        Messages[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Messages {
  id_message       Int        @id @default(autoincrement())
  content          String
  timestamp        DateTime
  userIdSender     Int
  userIdReceiver   Int
  announcementId   Int       
  announcement     Announcements @relation(fields: [announcementId], references: [id_announcement])
  sender           Users @relation("SentMessages", fields: [userIdSender], references: [id_user])
  receiver         Users @relation("ReceivedMessages", fields: [userIdReceiver], references: [id_user])
}